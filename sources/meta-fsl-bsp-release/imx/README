Freescale's 3.14.28-1.0.0 Yocto Project BSP
================================================

This BSP is a Freescale release providing support for the following processors

   * Freescale i.MX 6SoloX SABRE Smart Device (imx6sxsabresd)
   * Freescale i.MX 6SoloX SABRE Auto (imx6sxsabreauto)
   * Freescale i.MX 6Quad SABRE Smart Device (imx6qsabresd)
   * Freescale i.MX 6Quad SABRE Auto (imx6qsabreauto)
   * Freescale i.MX 6DualLite SABRE Smart Device (imx6dlsabresd)
   * Freescale i.MX 6DualLite SABRE Auto (imx6dlsabreauto)
   * Freescale i.MX 6SoloLite EVK (imx6slevk)
   * Freescale i.MXSX 17x17 arm2 (imx6sx17x17arm2)
   * Freescale i.MXSX 19x19 ddr3 arm2 (imx6sx19x19ddr3arm2)
   * Freescale i.MXSX 19x19 lpddr arm2 (imx6sx19x19lpddrarm2)
   * Freescale i.MX6SOLO SABRE Smart Device (imx6solosabresd )
   * Freescale i.MX6SOLO SABRE Auto (imx6solosabreauto )

 * i.MX 6 Device Tree configurations for each machine
    imx6sxsabresd - imx6sx-sdb.dtb imx6sx-sdb-emmc.dtb imx6sx-sdb-lcdif1.dtb imx6sx-sdb-ldo.dtb imx6sx-sdb-m4.dtb imx6sx-sdb-reva.dtb imx6sx-sdb-reva-ldo.dtb imx6sx-sdb-sai.dtb
    imx6sxsabreauto - imx6sx-sabreauto.dtb imx6sx-sabreauto-m4.dtb
    imx6qsabresd - imx6q-sabresd.dtb imx6q-sabresd-enetirq.dtb imx6q-sabresd-hdcp.dtb imx6q-sabresd-ldo.dtb imx6q-sabresd-uart.dtb
    imx6qsabreauto - imx6q-sabreauto.dtb imx6q-sabreauto-ecspi.dtb imx6q-sabreauto-flexcan1.dtb imx6q-sabreauto-gpmi-weim.dtb
    imx6dlsabresd - imx6dl-sabresd.dtb imx6dl-sabresd-enetirq.dtb imx6dl-sabresd-hdcp.dtb imx6dl-sabresd-ldo.dtb  imx6dl-sabresd-pf200.dtb
    imx6dlsabreauto - imx6dl-sabreauto.dtb imx6dl-sabreauto-ecspi.dtb imx6dl-sabreauto-flexcan1.dtb imx6dl-sabreauto-gpmi-weim.dtb
    imx6slevk - imx6sl-evk.dtb imx6sl-evk-csi.dtb imx6sl-evk-ldo.dtb imx6sl-evk-pf200.dtb imx6sl-evk-uart.dtb
    imx6sx17x17arm2 - imx6sx-17x17-arm2.dtb imx6sx-17x17-arm2-gpmi-weim.dtb imx6sx-17x17-arm2-ldo.dtb imx6sx-17x17-arm2-mlb.dtb imx6sx-17x17-arm2-sai.dtb imx6sx-17x17-arm2-spdif.dtb imx6sx-17x17-arm2-ssi.dtb
    imx6sx19x19ddr3arm2 - imx6sx-19x19-arm2.dtb imx6sx-19x19-arm2-csi.dtb imx6sx-19x19-arm2-gpmi-weim.dtb imx6sx-19x19-arm2-lcdif1.dtb imx6sx-19x19-arm2-ldo.dtb imx6sx-19x19-arm2-mqs.dtb imx6sx-19x19-arm2-sai.dtb 
    imx6sx19x19lpddr2arm2 - imx6sx-19x19-arm2.dtb imx6sx-19x19-arm2-csi.dtb imx6sx-19x19-arm2-gpmi-weim.dtb imx6sx-19x19-arm2-lcdif1.dtb imx6sx-19x19-arm2-ldo.dtb imx6sx-19x19-arm2-mqs.dtb imx6sx-19x19-arm2-sai.dtb 
    imx6solosabresd - imx6dl-sabresd.dtb imx6dl-sabresd-ldo.dtb
    imx6solosabreauto - imx6dl-sabreauto.dtb

 * i.MX 6 U-Boot configurations for each machine
    imx6sxsabresd - sd, qspi2, m4fastup, emmc
    imx6sxsabreauto - sd, qspi1, nand
    imx6qsabresd - sd, sata
    imx6qsabreauto - sd, eim-nor, spi-nor, nand, sata
    imx6dlsabresd - sd
    imx6dlsabreauto - sd, eim-nor, spi-nor, nand
    imx6solosabresd - sd
    imx6solosabreauto - sd, eim-nor, spi-nor, nand
    imx6slevk - sd, spi-nor
    imx6sx17x17arm2 - sd, qspi2, spi-nor, nand, eim-nor
    imx6sx19x19ddr3arm2 - sd, qspi2, spi-nor, nand, eim-nor
    imx6sx19x19lpddr2arm2 - sd, qspi2


Quick Start Guide
-----------------
See the Freescale Yocto Project User's Guide for instructions on installing repo.

First install the i.MX Freescale BSP repo
$: repo init -u git://git.freescale.com/imx/fsl-arm-yocto-bsp.git -b imx-3.14.28-1.0.0

Download the Yocto Freescale Layers:
$: repo sync

Run i.MX Freescale Yocto Project Setup:
$: MACHINE=< machine name> source fsl-setup-release.sh -b <build directory> -e <backend fb, dfb, wayland, x11>

After this your system will be configured to start a Yocto Project build.

Build images
---------------------
Each graphical backend X11, Frame buffer, DirectFB and Wayland must be in a separate build 
directory, so the setup script above must be run for each backend to configure the build 
correctly.
In the 3.14.28-1.0.0 release two image recipes are provided that work on almost all backends.

   fsl-image-gui provides a gui image without QT.
   fsl-image-qt5 provides a Qt5 image for X11, FB and Wayland backends.

Here are some examples:

Building X11
------------
  MACHINE=imx6qsabresd source fsl-setup-release.sh -b build-x11 -e x11
  bitbake fsl-image-gui
or
  bitbake fsl-image-qt5

To run the QT5 examples use the following parameters:
<QT5 example> -platform xcb -plugin evdevtouch:/dev/input/event0

Building Frame Buffer (FB)
---------------------------
  MACHINE=imx6qsabresd source fsl-setup-release.sh -b build-fb -e fb
  bitbake fsl-image-gui
or
  bitbake fsl-image-qt5

To run the QT5 examples use the following parameters:
<QT5 Example> -platform eglfs -plugin evdevtouch:/dev/input/event0

Building Direct FB (DFB)
---------------------------
  MACHINE=imx6qsabresd source fsl-setup-release.sh -b build-dfb -e dfb
  bitbake fsl-image-gui

Direct FB does not support QT5 for this release

Building Wayland-Weston (wayland)
---------------------------
  MACHINE=imx6qsabresd source fsl-setup-release.sh -b build-wayland -e wayland
  bitbake fsl-image-gui
or
  bitbake fsl-image-qt5

To run the QT5 examples use the following parameters:
<QT5 example> platform wayland-egl -plugin evdevtouch:/dev/input/event0 --fullscreen

Hardware Floating Point
-----------------------
This release enables hardware floating point by default.  This feature is enabled in both the machine 
configurations and in the layer.conf. (Some machine files exist in the community meta-fsl-arm without this setting.)
DEFAULTTUNE_mx6 = "cortexa9hf-neon

To build with software floating point, add the following to local.conf
DEFAULTTUNE_mx6 = "cortexa9-neon"

We also provide some binaries with a software floating point version which we use based on FP_TAG in layer.conf.
This release was only tested for hardware floating point.

Restricted Codecs
-----------------
Some codecs (Microsoft, AC3 and AACP) have recipes in this layer but binaries are not provided in 
the Yocto Project fetch system.
These codecs have contractual restrictions that require separate distribution.

The Manufacturing Tool - MFGTool
--------------------------------
In this release MFGTool uses the community setup.  
To build MFGTool, build the following:

   bitbake fsl-image-mfgtool-initramfs

End User License Agreement
--------------------------
During the Freescale Yocto Community BSP setup-environment process, the Freescale i.MX End User License Agreement (EULA) 
is displayed. To continue, users must agree to the conditions of this license. The agreement to the terms allows the 
Yocto build to untar packages from the Freescale mirror. Please read this license agreement carefully during the 
setup process because, once accepted, all further work in the Yocto environment is tied to this accepted agreement.

Chromium
---------
The Chromium browser requires additional layers added in the fsl-release-setup.sh script.   
To enable chromium requires the following steps:

In local.conf 
- Add chromium into your install list:
CORE_IMAGE_EXTRA_INSTALL += "chromium"

- Add commercial into the white list:
LICENSE_FLAGS_WHITELIST="commercial"

QTWebkit
--------
To start go to /usr/share/qt5/examples/webkitwidgets/browser and run browser

Qt
--
Note that Qt has both a commercial and open source license options.  Make the decision about which license
to use before starting work on custom Qt applications.  Once custom Qt applications are started with an open source
Qt license the work can not be used with a commercial Qt license.  Work with a legal representative to understand
the differences between each license.   Default builds use an open source Qt license.

