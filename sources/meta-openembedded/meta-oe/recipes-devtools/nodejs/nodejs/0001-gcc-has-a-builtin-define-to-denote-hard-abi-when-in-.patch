From bf701e7cb3616631a354ed9ecbed6dd16f60c60d Mon Sep 17 00:00:00 2001
From: Koen Kooi <koen@dominion.thruhere.net>
Date: Wed, 30 Jan 2013 10:43:47 +0100
Subject: [PATCH] gcc has a builtin define to denote hard abi when in use, e.g.
 when using -mfloat-abi=hard it will define __ARM_PCS_VFP to 1 and therefore
 we should check that to determine which calling convention is in use and not
 __VFP_FP__ which merely indicates presence of VFP unit

The fix has been provided by Khem Raj <raj.khem@gmail.com>

Upstream-Status: Forwarded

Signed-off-by: Koen Kooi <koen@dominion.thruhere.net>
---
 deps/v8/src/arm/assembler-arm.cc | 4 ++--
 deps/v8/src/platform-linux.cc    | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/deps/v8/src/arm/assembler-arm.cc b/deps/v8/src/arm/assembler-arm.cc
index 1787d15..c64ef58 100644
--- a/deps/v8/src/arm/assembler-arm.cc
+++ b/deps/v8/src/arm/assembler-arm.cc
@@ -71,10 +71,10 @@ static unsigned CpuFeaturesImpliedByCompiler() {
   // If the compiler is allowed to use VFP then we can use VFP too in our code
   // generation even when generating snapshots. ARMv7 and hardware floating
   // point support implies VFPv3, see ARM DDI 0406B, page A1-6.
-#if defined(CAN_USE_ARMV7_INSTRUCTIONS) && defined(__VFP_FP__) \
+#if defined(CAN_USE_ARMV7_INSTRUCTIONS) && defined(__ARM_PCS_VFP) \
     && !defined(__SOFTFP__)
   answer |= 1u << VFP3 | 1u << ARMv7 | 1u << VFP2;
-#endif  // defined(CAN_USE_ARMV7_INSTRUCTIONS) && defined(__VFP_FP__)
+#endif  // defined(CAN_USE_ARMV7_INSTRUCTIONS) && defined(__ARM_PCS_VFP)
         // && !defined(__SOFTFP__)
 #endif  // _arm__
 
diff --git a/deps/v8/src/platform-linux.cc b/deps/v8/src/platform-linux.cc
index ed9eb79..10d1879 100644
--- a/deps/v8/src/platform-linux.cc
+++ b/deps/v8/src/platform-linux.cc
@@ -170,7 +170,7 @@ bool OS::ArmCpuHasFeature(CpuFeature feature) {
 // calling this will return 1.0 and otherwise 0.0.
 static void ArmUsingHardFloatHelper() {
   asm("mov r0, #0":::"r0");
-#if defined(__VFP_FP__) && !defined(__SOFTFP__)
+#if defined(__ARM_PCS_VFP) && !defined(__SOFTFP__)
   // Load 0x3ff00000 into r1 using instructions available in both ARM
   // and Thumb mode.
   asm("mov r1, #3":::"r1");
@@ -195,7 +195,7 @@ static void ArmUsingHardFloatHelper() {
 #else
   asm("vmov d0, r0, r1");
 #endif  // __thumb__
-#endif  // defined(__VFP_FP__) && !defined(__SOFTFP__)
+#endif  // defined(__ARM_PCS_VFP) && !defined(__SOFTFP__)
   asm("mov r1, #0":::"r1");
 }
 
-- 
1.8.1

